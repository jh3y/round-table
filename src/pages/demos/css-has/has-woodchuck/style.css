@import "open-props/style";
@import "open-props/normalize";

@font-face {
  font-family: Impact;
  src: url(/shared/fonts/impact.ttf);
}

* {
  box-sizing: border-box;
}

:root {
  --recording: 0;
}

body {
  display: grid;
  place-items: center;
  min-height: 100vh;
  align-content: center;
  overflow: hidden;
}

main {
  max-inline-size: var(--size-content-2);
  font-family: 'Impact', sans-serif;
  font-size: var(--font-size-6);
  font-weight: var(--font-weight-9);
  text-transform: uppercase;

}

.recording-status {
  /* display:none; */
  height: 2.5vmin;
  aspect-ratio: 1;
  position: fixed;
  top: 2vmin;
  right: 2vmin;
  background: hsl(10 80% 50%);
  border-radius: 50%;
  animation: pulse calc(var(--recording, 0) * 1s) infinite ease-in-out;
}

@keyframes pulse {
  0%, 100% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
}

.instruction {
  opacity: 0.6;
  display: none;
}


.emojis {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
}

.emojis div {
  font-size: 10vmin;
  position: relative;
}

.chuck {
  transform-origin: 75% 75%;
}
.wood + .chuck {
  animation: chuck 0.5s infinite; 
}

@keyframes chuck {
  50% {
    transform: rotate(-45deg);
  }
}

.wood {
  transform-origin: 50% 100%;
}

.peck {
  transform: rotateY(180deg) translateX(-100%);
  transform-origin: 0% 75%;
}

.peck:has(+ :is(.pickled, .peppers)) {
  animation: peck 0.5s infinite;
}

@keyframes peck {
  50% {
    transform: rotateY(180deg) translateX(-100%) rotate(-45deg);
  }
}

.peck:has(+.lit):after {
  content: "üçó";
  position: absolute;
  inset: 0;
} 

.peck + :is(.pickled, .peppers) {
  transform-origin: 50% 75%;
  animation: pecked 1s both steps(4);
}

@keyframes pecked {
  to {
    scale: 1 0;
  }
}

.king:after {
  font-size: 10vmin;
  position: relative;
  content: attr(data-emoji);
}

.king:has(+ .babies) {
  animation: grow 1s both;
}

@keyframes grow {
  to {
    scale: 1.5;
  }
}

.scientist {
  animation: inject 2 0.5s;
}

@keyframes inject {
  50% {
    transform: translateY(-50%);
  }
}

.king:has(+ .scientist):after {
  animation: angry 2s forwards steps(1);
}

.babies:has(+ .scientist):after {
  animation: angry 2s forwards steps(1);
}

@keyframes angry {
  to {
    content: "ü§¨";
  }
}

@keyframes sad {
  to {
    content: "üò≠";
  }
}

.babies:after {
  content: attr(data-emoji);
  font-size: 10vmin;
  position: relative;
}

.picked {
  transform: rotateY(180deg);
}

.picked:has(+ .peck):not(:has(~ :is(.pickled, .peppers))) {
  animation: pick 0.5s infinite;
}

.picked:has(+ .peck) + .peck:not(:has(~ :is(.pickled, .peppers))) {
  animation: picked 0.5s both;
}

@keyframes picked {
  100% {
    transform: rotateY(180deg) translateX(-100%) rotate(0deg) translate(-200%, -200%) scale(0.5);
    opacity: 0;
  }
}

@keyframes pick {
  50% {
    transform: rotateY(180deg) rotate(-45deg);
  }
}

.wood:has(+ .chuck) {
  animation: chucked 1s forwards;
}

:is(.wood, .chuck):has(+ .lit) {
  animation: burned 0.25s forwards;
}

:is(.cat):has(+ .lit):after,
.lit + .cat:after {
  content: "üôÄ";
  position: absolute;
  inset: 0;
}

@keyframes burned {
  to {
    filter: brightness(0);
  }
}

@keyframes chucked {
  to {
    transform: rotate(-90deg);
  }
}

@keyframes wave {
  50% {
    transform: translate(0, -50%);
  }
}