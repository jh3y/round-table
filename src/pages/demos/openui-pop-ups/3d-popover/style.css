@layer normalize, open-props, mdl, base, demo;

@import "normalize.css" layer(normalize);
@import "open-props/style" layer(open-props);
@import "open-props/normalize" layer(open-props);

@import url("../../../../../public/shared/css/mdl.css") layer(mdl);
@import url("../../../../../public/shared/css/icons.css") layer(mdl);

@layer base {
  *,
  *:after,
  *:before {
    box-sizing: border-box;
    transform-style: preserve-3d;
    touch-action: none;
  }

  body {
    display: grid;
    place-items: center;
    min-height: 100vh;
    font-family: "Google Sans", sans-serif, system-ui;
    position: relative;
    overflow: hidden;
  }
}

@layer demo {
  [popovertoggletarget] {
    inset: auto;
    left: 100%;
    top: 100%;
    translate: calc(-100% - 2rem) calc(-100% - 6rem);
    margin: 0;
  }
  [popover=auto] {
    padding: var(--size-4);
  }

  :where([popover]) {
    border: 0;
  }

  [popover=auto]::backdrop {
    background: hsl(0 0% 10% / 0.5);
    opacity: 0;
    backdrop-filter: blur(2px);
    transition: opacity 0.5s;
  }
  
  [popover=auto]:open::backdrop {
    opacity: 1;
  }

  .popup {
    --depth: 10vmin;
    --color: var(--pink-4);
    width: 20vmin;
    aspect-ratio: 4 / 3;
    background: transparent;
    position: absolute;
    top: 50%;
    padding: 0;
    margin: 0;
    overflow: visible;
    left: 50%;
    border: 0;
    transition: transform 0.25s var(--ease-elastic-4);
    transform: translate3d(-50%, -50%, 100vmin)
            rotateX(-24deg) rotateY(24deg)
            /* Responsible for showing/hiding */
            translateY(calc(var(--hide, 1) * 100vmin))
            /* Parallaxing */
            rotateY(calc(var(--x, 0) * 1deg))
            rotateX(calc(var(--y, 0) * -1deg));
  }

  [popover]:open, [popover]:open::backdrop {
    --hide: 0;
  }

  .blinker {
    transform-box: fill-box;
    transform-origin: 50% 50%;
    animation: blink 6s var(--delay, -2s) infinite;
  }

  @keyframes blink {
    0%, 46%, 48%, 50%, 100% {
      scale: 1 1;
    }
    47%, 49% {
      scale: 1 0.01;
    }
  }

  [popover=auto]::backdrop {
    background: hsl(0 10% 10%/ 0.35);
    opacity: calc(1 - var(--hide, 0));
    transition: opacity 0.25s;
    backdrop-filter: blur(2px);
  }

  .popup__text {
    opacity: 0;
    padding: var(--size-4);
    font-size: var(--font-size-fluid-2);
    font-weight: var(--font-weight-6);
    color: var(--gray-0);
  }

  .sushi-face {
    width: 75%;
  }

  .popup__tail {
    height: 50%;
    aspect-ratio: 1;
    position: absolute;
    top: 50%;
    left: 35%;
    transform: translate3d(-50%, -50%, -2.5vmin);
    --depth: 5vmin;
  }

  .popup__tail :is(.cuboid__side:nth-of-type(2), .cuboid__side:nth-of-type(4)) {
    background: transparent;
    filter: none;
  }

  .popup__tail .cuboid__side:nth-of-type(2):after {
    content: "";
    background: var(--pink-4);
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 142%;
    transform-origin: 0 50%;
    transform: rotateY(45deg);
  }
  .popup__tail :is(.cuboid__side:nth-of-type(1), .cuboid__side:nth-of-type(3)) {
    --b: 0.7;
    clip-path: polygon(0 0, 100% 100%, 0 100%);
  }

  [popover=auto] > .cuboid > .cuboid__side:nth-of-type(3) {
    filter: none;
  }

  [popover=auto] > .cuboid {
    transform-origin: 35% 100%;
  }

  [popover=auto] .cuboid {
    position: absolute;
    inset: 0;
    font-size: var(--font-size-fluid-2);
    font-weight: var(--font-weight-6);
    color: var(--gray-0);
  }

  [popover=auto] .cuboid__side {
    display: grid;
    place-items: center;
  }

  /* Cuboid boilerplate code */
  .cuboid {
    width: 100%;
    height: 100%;
    position: relative;
  }
  .cuboid__side {
    background: var(--color);
    position: absolute;
    filter: brightness(var(--b));
  }
  .cuboid__side:nth-of-type(1) {
    --b: 1.1;
    height: var(--depth, 20vmin);
    width: 100%;
    top: 0;
    transform: translate(0, -50%) rotateX(90deg);
  }
  .cuboid__side:nth-of-type(2) {
    --b: 0.9;
    height: 100%;
    width: var(--depth, 20vmin);
    top: 50%;
    right: 0;
    transform: translate(50%, -50%) rotateY(90deg);
  }
  .cuboid__side:nth-of-type(3) {
    --b: 0.5;
    width: 100%;
    height: var(--depth, 20vmin);
    bottom: 0;
    transform: translate(0%, 50%) rotateX(90deg);
  }
  .cuboid__side:nth-of-type(6) {
    --b: 1;
    height: 100%;
    width: var(--depth, 20vmin);
    left: 0;
    top: 50%;
    transform: translate(-50%, -50%) rotateY(90deg);
  }
  .cuboid__side:nth-of-type(5) {
    --b: 0.8;
    height: 100%;
    width: 100%;
    transform: translate3d(0, 0, calc(var(--depth, 20vmin) * 0.5));
    top: 0;
    left: 0;
  }
  .cuboid__side:nth-of-type(4) {
    --b: 1.2;
    height: 100%;
    width: 100%;
    transform: translate3d(0, 0, calc(var(--depth, 20vmin) * -0.5))
      rotateY(180deg);
    top: 0;
    left: 0;
  }
}

@layer base {
  :where([popover]) {
    margin: auto;
    border-width: initial;
    border-style: solid;
  }
  body {
    margin: 0;
    display: grid;
    place-items: center;
    min-height: 100vh;
    overflow-x: hidden;
    overflow-y: auto;
  }

  article {
    padding-bottom: var(--size-4);
  }

  h1 {
    margin: 0;
  }

  article {
    margin: 0 var(--size-4);
    padding-bottom: var(--size-4);
  }

  article > p + p {
    margin-top: var(--size-4);
  }

  main > header {
    margin-bottom: var(--size-4);
    max-width: 100vw;
  }

  main {
    max-width: var(--size-content-3);
  }

  header {
    min-height: var(--size-content-1);
    background: var(--surface-2);
    display: grid;
    padding: var(--size-4);
    place-items: center;
    width: 100vw;
    position: relative;
    top: 0;
    left: 50%;
    margin-left: -50vw;
    min-height: 50vmin;
    max-height: 500px;
  }

  h1 {
    position: sticky;
    top: 0;
  }
}

@layer button {
  .fab svg {
    fill: var(--gray-7);
  }
}
