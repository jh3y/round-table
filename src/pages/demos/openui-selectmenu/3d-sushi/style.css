@import "normalize.css" layer(normalize);
@import "open-props/style" layer(open-props);
@import "open-props/normalize" layer(open-props);

*,
*:after,
*:before {
  box-sizing: border-box;
  transform-style: preserve-3d;
}

:root {
  --size: 70vmin;
}

html {
  color-scheme: none;
  background: transparent;
}

body {
  display: grid;
  place-items: center;
  align-content: center;
  gap: 1rem;
  min-height: 100vh;
  font-family: "Google Sans", sans-serif, system-ui;
  background: transparent;
  position: relative;
  overflow: hidden;
  background: hsl(280 100% 50%);
}


.scene {
  height: var(--size);
  aspect-ratio: 1;
/*   background: hsl(10 80% 50% / 0.2); */
  position: relative;
  transform: rotateX(-24deg) rotateY(-32deg) rotateX(90deg);
}

.plate__content {
  transform: translateZ(1vmin);
  inset: 0;
  position: absolute;
  padding: calc(var(--size) * 0.2);
}

.plate {
  color: var(--gray-8);
  height: 100%;
  width: 100%;
  position: relative;
  --depth: 2vmin;
}

.plate > .cuboid .cuboid__side:nth-of-type(6) {
  background: 
    linear-gradient(currentColor, currentColor) 0 0 / 100% calc(var(--size) * 0.2) no-repeat,
    linear-gradient(currentColor, currentColor) 0 100% / 100% calc(var(--size) * 0.2) no-repeat,
    linear-gradient(currentColor, currentColor) 0 0 / calc(var(--size) * 0.2) 100% no-repeat,
    linear-gradient(currentColor, currentColor) 100% 0 / calc(var(--size) * 0.2) 100% no-repeat;
}

.plate__inner {
  position: absolute;
  top: 50%;
  left: 50%;
  width: calc(var(--size) * 0.6);
  aspect-ratio: 1;
  transform: translate(-50%, -50%);
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.controls {
  position: absolute;
  left: calc(var(--size) * 0.2);
  bottom: 0;
  transform: translateZ(1.1vmin);
  height: calc(var(--size) * 0.2);
  width: calc(var(--size) * 0.6);
  display: grid;
  place-items: center;
}

selectmenu {
  display: grid;
  place-items: center;
  height: 100%;
  width: 100%;
  padding: 0;
}

#maki-select [slot=button] {
  width: 100%;
  height: 100%;
  display: grid;
  place-items: center;
}

#maki-select [behavior=button] {
  font-size: calc(var(--size) * 0.06);
  padding: 0;
  color: var(--gray-8);
  width: 80%;
  font-weight: var(--font-weight-1);
  padding: var(--size-2);
  background: transparent;
}

#maki-select:has([popover]:open) {
  --open: 1;
}

#maki-select [popover]:open {
  top: 50%;
  left: 50%;
  display: grid;
  transform: translate(-50%, -50%) rotateX(-24deg) rotateY(-32deg) rotateX(90deg) translateZ(1.1vmin);
}

.cuboid__value {
  color: var(--gray-2);
}

#maki-select [slot=listbox] {
  height: calc(var(--size) * 0.6);
  width: calc(var(--size) * 0.6);
  max-height: calc(var(--size) * 0.6);
  position: fixed;
  bottom: 100%;
  left: 0%;
  overflow: visible;
  display: grid;
}

#maki-select [behavior=button] .cuboid {
  color: var(--gray-7);
  --depth: 2vmin;
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  transition: transform 0.2s var(--ease-elastic-2);
  transform: translateZ(calc((1 - (var(--open, 0) * 1.25)) * 1vmin));
}

#maki-select [popover] {
  margin: 0;
  overflow: visible;
  border: 0;
  background: transparent;
  height: calc(var(--size) * 0.6);
  max-height: calc(var(--size) * 0.6);
  width: calc(var(--size) * 0.6);
  display: grid;
  padding: calc(var(--size) * 0.1);
  gap: calc(var(--size) * 0.05);
  grid-template: 1fr 1fr / 1fr 1fr;
  transform: translateZ(0vmin);
  position-fallback: none;
}

#maki-select option {
  color: transparent;
  position: relative;
  transform: translateZ(-1.1vmin);
  padding: 0;
  outline-color: transparent;
  outline-width: 0;
}

#maki-select option:is(:hover, :focus-visible) {
  background: transparent;
  outline-color: transparent;
}

:root:has([value=tomago]:is(:hover, :focus-visible)) [data-sushi=tomago],
:root:has([value=tuna]:is(:hover, :focus-visible)) [data-sushi=tuna],
:root:has([value=salmon]:is(:hover, :focus-visible)) [data-sushi=salmon],
:root:has([value=cucumber]:is(:hover, :focus-visible)) [data-sushi=cucumber] {
  --elevate: 1;
}

[data-sushi] {
  color: var(--gray-9);
  position: relative;
  transform: translateZ(-1.1vmin);
}

.sushi__slots {
  padding: calc(var(--size) * 0.1);
  gap: calc(var(--size) * 0.05);
  grid-template: 1fr 1fr / 1fr 1fr;
  height: calc(var(--size) * 0.6);
  width: calc(var(--size) * 0.6);
  max-height: calc(var(--size) * 0.6);
  position: absolute;
  top: 50%;
  left: 50%;
  overflow: visible;
  display: grid;
  transform: translate(-50%, -50%) translateZ(1vmin);
  grid-template: 1fr 1fr / 1fr 1fr;
}

.sushi-slot {
  width: 100%;
  height: 120%;
  position: absolute;
  bottom: 50%;
  transform: scaleZ(var(--open, 0)) rotateX(-90deg);
  transform-origin: 50% 100%;
}
[data-sushi] .sushi-slot {
  transform: scaleZ(var(--open, 0)) rotateX(-90deg) translateY(calc(var(--elevate, 0) * -50%));
  transition: transform 0.2s var(--ease-elastic-2);
}

[data-sushi]:after {
  content: "";
  height: 120%;
  width: 120%;
  border: calc(var(--size) * 0.0095) solid var(--accent);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(var(--elevate, 0));
  transition: transform 0.2s var(--ease-elastic-2);
}

.plate__sticks {
  transform: translateZ(1vmin);
  height: 80%;
  width: 8%;
  position: absolute;
  top: 10%;
  left: 5%;
  display: flex;
  justify-content: space-between;
  grid-template-columns: 1fr 1fr;
}

.plate__stick {
  color: hsl(40 80% 80%);
  --depth: calc(var(--size) * 0.025);
  width: calc(var(--size) * 0.025);
  transform: translateZ(calc(var(--size) * 0.0125));
}

.plate__stick:nth-of-type(2) {
  rotate: -2deg;
}

:root:has([value=cucumber]:checked) [data-sushi=cucumber],
:root:has([value=tomago]:checked) [data-sushi=tomago],
:root:has([value=tuna]:checked) [data-sushi=tuna],
:root:has([value=salmon]:checked) [data-sushi=salmon],
:root:has([popover]:open) [data-sushi] {
  --open: 1;
}

:root:has([data-dirty=false]) [data-sushi] {
  --open: 0 !important;
}

.plate__inner > .cuboid .cuboid__side:nth-of-type(6) {
  display: none;
}

.plate__inner > .cuboid .cuboid__side:nth-of-type(1) {
  --brightness: 0.4;
}

.plate__inner > .cuboid .cuboid__side:nth-of-type(4) {
  --brightness: 0.2;
}

.cuboid__side:nth-of-type(6) {
  display: grid;
  place-items: center;
}

.cuboid__side:nth-of-type(6) svg {
  width: 75%;
}

[data-sushi=cucumber] {
  --delay: -3s;
  --accent: hsl(120 100% 50%);
}
[data-sushi=tomago] {
  --delay: -1s;
  --accent: hsl(45 100% 50%);
}
[data-sushi=tuna] {
  --delay: -4s;
  --accent: hsl(15 80% 60%);
}
[data-sushi=salmon] {
  --delay: -2s;
  --accent: hsl(20 80% 80%);
}

#eye-clip-one rect {
  animation: blink 6s -1s infinite;
}
#eye-clip-two rect {
  animation: blink 6s -2s infinite;
}
#eye-clip-three rect {
  animation: blink 6s -3s infinite;
}
#eye-clip-four rect {
  animation: blink 6s -4s infinite;
}

option .cuboid__side:nth-of-type(1) {
  filter: none;
}

.sushi-face .shock-mouth {
  opacity: var(--elevate, 0);
}

.sushi-face .joy-mouth {
  opacity: calc(1 - var(--elevate, 0));
}

.blinker {
  transform-box: fill-box;
  transform-origin: 50% 50%;
  animation: blink 6s var(--delay, -2s) infinite;
}

@keyframes blink {
  0%, 46%, 48%, 50%, 100% {
    scale: 1 1;
  }
  47%, 49% {
    scale: 1 0.01;
  }
}

.chart__bar--active .joy-mouth {
  display: none;
}

.chart__bar--active .shock-mouth {
  display: block;
}

.sushi-slot {
  container: bar / inline-size;
  --depth: 100cqi;
  height: calc(var(--height, 100) * 1%);
}

[data-sushi] .sushi-slot .cuboid__side:nth-of-type(1) {
  background: linear-gradient(var(--accent), var(--accent)) 50% 50% / 50% 50% no-repeat, var(--gray-0);
  border: 10cqi solid var(--gray-7);
}

.chart__bar:nth-of-type(1) {
  anchor-name: --anchor-1;
  --accent: var(--yellow-4);
  height: 90%;
}

.chart__bar:nth-of-type(2) {
  anchor-name: --anchor-2;
  --accent: var(--green-4);
  height: 25%;
}

.chart__bar:nth-of-type(3) {
  anchor-name: --anchor-3;
  --accent: var(--red-4);
  height: 75%;
}

/* Cuboid stuff */
.cuboid {
  height: 100%;
  width: 100%;
  position: relative;
}

.cuboid__side {
  background-color: currentColor;
  position: absolute;
  height: 100%;
  width: 100%;
  transition: background-color 0.2s;
  filter: brightness(var(--brightness, 1));
  border-bottom: calc(var(--depth) * 0.1) solid hsl(var(--side-color) / 0.25);
}

/* T, R, B, L, F, B */
.cuboid__side:nth-of-type(1) {
  --brightness: 0.8;
  top: 0;
  height: var(--depth, 50vmin);
  transform: translateY(-50%) rotateX(-90deg);
}

/* .cuboid__side:nth-of-type(1):before {
  content: "";
  position: absolute;
  inset: 0;
  filter: brightness(var(--brightness));
  background: currentColor;
} */

.cuboid__side:nth-of-type(1) svg {
  filter: brightness(var(--brightness));
}

.cuboid__side:nth-of-type(2) {
  --brightness: 0.6;
  top: 50%;
  right: 0;
  width: var(--depth, 50vmin);
  transform: translate(50%, -50%) rotateY(-90deg);
}
.cuboid__side:nth-of-type(3) {
  --brightness: 1.3;
  bottom: 0;
  height: var(--depth, 50vmin);
  transform: translateY(50%) rotateX(90deg);
}
.cuboid__side:nth-of-type(4) {
  --brightness: 0.6;
  top: 50%;
  width: var(--depth, 50vmin);
  transform: translate(-50%, -50%) rotateY(90deg);
}
.cuboid__side:nth-of-type(5) {
  --brightness: 0.75;
  transform: translateZ(calc(var(--depth, 50vmin) / -2));
}
.cuboid__side:nth-of-type(6) {
  --brightness: 1;
  transform: translateZ(calc(var(--depth, 50vmin) / 2)) rotateY(0deg);
}
