@import "normalize.css" layer(normalize);
@import "open-props/style" layer(open-props);
@import "open-props/normalize" layer(open-props);

*,
*:after,
*:before {
  box-sizing: border-box;
  max-inline-size: 100%;
}

body {
  display: grid;
  place-items: center;
  height: 100vh;
  overflow: hidden;
  background: var(--gray-4);
  font-family:  'Google Sans', sans-serif, system-ui;
}

:root {
  --track-size: 40vw;
  --track-translation:  10%;
}

main {
  width: var(--track-size);
  aspect-ratio: 4 / 3;
  overflow: auto;
  position: relative;
  background:
    repeating-linear-gradient(0deg, white 0 10%, transparent 10% 15%) 50% 0 / 10px 100% no-repeat,
    linear-gradient(var(--gray-8), var(--gray-8)) 50% 0 / calc(var(--track-size) * 0.3) 100% no-repeat,
    linear-gradient(90deg, var(--green-8) 25%, transparent 25% 75%, var(--green-8) 75%),
    var(--gray-6);
}

.title {
  width: var(--track-size);
  aspect-ratio: 4 / 3;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
  display: grid;
  place-items: center;
  background: hsl(0 0% 0% / 0.75);
}

.title h1 {
  color: var(--gray-0);
  display: grid;
  font-family: 'Impact', sans-serif;
  text-transform: uppercase;
  margin: 0;
  line-height: 1;
  transform: skewX(-10deg);
}

.title h1 span {
  clip-path: inset(0 0 0 0);
}

.title h1 span:first-of-type {
  animation: stage-left both;
  animation-timeline: --title;
  animation-delay: exit 0%;
  animation-end-delay: exit 100%;
}

.title h1 span:last-of-type {
  animation: stage-right both;
  animation-timeline: --title;
  animation-delay: exit 0%;
  animation-end-delay: exit 100%;
}

@keyframes stage-left {
  to {
    clip-path: inset(0 100% 0 0);
  }
}

@keyframes stage-right {
  to {
    clip-path: inset(0 0 0 100%);
  }
}

.title-trigger {
  width: 100%;
  aspect-ratio: 4 / 3;
  view-timeline-name: --title;
}

.title {
  animation: fade both;
  animation-timeline: --title;
  animation-delay: exit 0%;
  animation-end-delay: exit 100%;
}

@keyframes fade {
  to {
    background: hsl(0 0% 0% / 0);
  }
}

.surround {
  --border: 25px;
  width: calc(var(--track-size) + (2 * var(--border)));
  height: calc(var(--track-size) * 0.75 + (2 * var(--border)));
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
  border: var(--border) solid var(--gray-8);
}

.surround:before {
  content: "";
  position: absolute;
  inset: 0;
  box-shadow: 0 0 10px 10px hsl(0 0% 0% / 0.5) inset;
  background: linear-gradient(55deg, transparent 25%, hsl(0 0% 100% / 0.25) 65%, transparent 90%);
}

.surround:after {
  content: "";
  width: calc(var(--border) * 0.75);
  aspect-ratio: 3/1;
  background: var(--red-5);
  position: absolute;
  bottom: calc(var(--border) * -0.5);
  transform: translate(-100%, 150%);
  right: 0;
  box-shadow: 0 0 8px 4px hsl(0 100% 50% / 0.5);
}

.track {
  height: 500%;
  width: 100%;
  position: relative;
}

.road {
  width: calc(var(--track-size) * 0.3);
  background: repeating-linear-gradient(0deg, white 0 10%, transparent 10% 15%) 50% 0 / 10px 100% no-repeat,
    var(--gray-8);
  height: 100%;
  position: absolute;
  left: 50%;
  transform: translate(-50%, 0);
}

.car {
  width: calc(var(--track-size) * 0.1);
  object-fit: contain;
  position: absolute;
  left: 50%;
}

.brian {
  top: 50%;
  transform: translate(-125%, 0);
  view-timeline-name: --brian;
}

.dom-track {
  position: fixed;
  width: var(--track-size);
  aspect-ratio: 4 / 3;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
  overflow: hidden;
}

.action {
  display: flex;
  place-items: center;
  gap: 0.5rem;
}
label {
  color: var(--gray-9);
}

:root:has(#dom:checked) .dom {
  opacity: 1;
}

.progress--dom {
  display: none;
}

:root:has(#dom:checked) .progress--dom {
  display: block;
}

.dom {
  bottom: 0;
  width: calc(var(--track-size) * 0.12);
  transform: translateX(22%) translateY(150%);
  animation-timeline: --brian;
  animation: family both linear;
  animation-delay: cover 10%;
  animation-end-delay: cover 65%;
  opacity: 0;
}

@keyframes family {
  to {
    transform: translateX(22%) translateY(calc(150% - (var(--track-size) * 0.75) - 150%));
  }
}

.indicators {
  position: fixed;
  width: 16vw;
  left: 8vw;
  display: grid;
  top: 50%;
  gap: 2rem;
  transform: translate(0, -50%);
  justify-items: center;
}

.progress {
  height: 2.5rem;
  width: 100%;
  background: var(--gray-8);
  position: relative;
  border-radius: var(--radius-3);
  overflow: hidden;
}

.progress__bar {
  background: var(--indigo-6);
  width: 100%;
  height: 100%;
  transform: scaleX(0);
  transform-origin: 0 50%;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.progress:nth-of-type(even) .progress__bar {
  background: var(--orange-6);
}

.progress__label {
  position: absolute;
  inset: 0;
  text-align: center;
  font-weight: bold;
  display: grid;
  place-items: center;
  font-size: 1.25rem;
  color: var(--gray-0);
}

.progress--scroll .progress__bar {
  animation: indicate both linear;
  animation-timeline: scroll();
}
.progress--dom .progress__bar {
  animation: indicate both linear;
  animation-timeline: --brian;
  animation-delay: cover 10%;
  animation-end-delay: cover 65%;
}
.progress--enter .progress__bar {
  animation: indicate both linear;
  animation-timeline: --brian;
  animation-delay: enter 0%;
  animation-end-delay: enter 100%;
}
.progress--exit .progress__bar {
  animation: indicate both linear;
  animation-timeline: --brian;
  animation-delay: exit 0%;
  animation-end-delay: exit 100%;
}
.progress--cover .progress__bar {
  animation: indicate both linear;
  animation-timeline: --brian;
  animation-delay: cover 0%;
  animation-end-delay: cover 100%;
}
.progress--contain .progress__bar {
  animation: indicate both linear;
  animation-timeline: --brian;
  animation-delay: contain 0%;
  animation-end-delay: contain 100%;
}

@keyframes indicate {
  to {
    transform: scaleX(1);
  }
}